generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int        @id @default(autoincrement())
  firstName    String     @db.VarChar(20)
  lastName     String     @db.VarChar(20)
  email        String     @unique(map: "email") @db.VarChar(60)
  hashPassword String     @db.VarChar(255)
  updated_at   DateTime   @default(now()) @db.Timestamp(0)
  created_at   DateTime   @default(now()) @db.Timestamp(0)
  labels       Label[]
  projects     Project[]
  tasks        Task[]
}

model Label {
  id         Int      @id @default(autoincrement())
  uid        Int
  name       String   @unique @db.VarChar(20)
  updated_at DateTime @default(now()) @db.Timestamp(0)
  created_at DateTime @default(now()) @db.Timestamp(0)
  users      User    @relation(fields: [uid], references: [id], onUpdate: Restrict, map: "labels_ibfk_1")
  tasks      TaskWithLabel[]

  @@index([uid], map: "uid")
}

model Project {
  id         Int      @id @default(autoincrement())
  uid        Int
  name       String   @db.VarChar(40)
  color      String?  @default("#b8255f") @db.VarChar(9)
  updated_at DateTime @default(now()) @db.Timestamp(0)
  created_at DateTime @default(now()) @db.Timestamp(0)
  users      User    @relation(fields: [uid], references: [id], onUpdate: Restrict, map: "projects_ibfk_1")
  tasks      Task[]

  @@index([uid], map: "uid")
}

model Task {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(40)
  description String    @default("") @db.TinyText
  completed   Boolean   @default(false)
  important   Boolean   @default(false)
  dueDate     DateTime  @db.Date @default(now())
  updated_at  DateTime  @default(now()) @db.Timestamp(0)
  created_at  DateTime  @default(now()) @db.Timestamp(0)
  labels      TaskWithLabel[]
  user        User?    @relation(fields: [uid], references: [id])
  uid         Int?      @map("uid")
  project     Project? @relation(fields: [pid], references: [id])
  pid         Int?      @map("pid")

  @@index([uid], map: "uid")
  @@index([pid], map: "pid")
}

model TaskWithLabel {
  id       Int      @id @default(autoincrement())
  task     Task    @relation(fields: [taskId], references: [id])
  taskId   Int
  label    Label   @relation(fields: [labelId], references: [id])
  labelId  Int

  @@index([taskId], map: "taskId")
  @@index([labelId], map: "labelId")

  @@unique([taskId, labelId])
}